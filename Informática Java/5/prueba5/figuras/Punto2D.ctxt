#BlueJ class context
comment0.target=Punto2D
comment0.text=\r\n\ Esta\ clase\ se\ utiliza\ para\ representar\ un\ Punto\ en\ el\r\n\ plano\ de\ dos\ dimensiones\ mediante\ sus\ coordenas\ reales\r\n\ cartesianas\ abscisa\ y\ ordenada.\ Desarrolla,\ a\ su\ vez,\ \r\n\ operaciones\ para\ trabajar\ con\ objetos\ Punto.\r\n\ \r\n\ @author\ Alberto\ Ciriano\r\n\ @version\ MAR/18\r\n
comment1.params=
comment1.target=Punto2D()
comment1.text=\r\n\ genera\ un\ nuevo\ punto\ que\ representar\u00EDa\ el\ origen\r\n\ de\ coordenadas\r\n
comment10.params=p
comment10.target=boolean\ mismoPuntoQue(Punto2D)
comment10.text=\r\n\ m\u00E9todo\ para\ comprobar\ si\ el\ punto\ objeto\ due\u00F1o\ es\r\n\ el\ mismo\ que\ otro\ que\ se\ pasa\ como\ par\u00E1metro\r\n\r\n\ @param\ p\ punto\ con\ el\ que\ comparar\r\n\ @return\ devuelve\ cierto\ o\ falso\ segun\ el\ caso\r\n
comment11.params=p
comment11.target=boolean\ muyProximoA(Punto2D)
comment11.text=\r\n\ m\u00E9todo\ para\ comprobar\ si\ el\ punto\ objeto\ due\u00F1o\ se\r\n\ encuentra\ muy\ cercano\ a\ otro,\ es\ decir,\ si\ podr\u00EDamos\ \r\n\ decir\ que\ se\ trata\ del\ mismo\ (o\ casi);\r\n\ tomamos\ un\ valor\ arbitrario\ de\ distancia\ muy\ peque\u00F1o\ \r\n\r\n\ @param\ p\ punto\ con\ el\ que\ comprobar\ \r\n\ @return\ devuelve\ cierto\ o\ falso\ segun\ el\ caso\r\n
comment12.params=p
comment12.target=double\ distanciaA(Punto2D)
comment12.text=\r\n\ m\u00E9todo\ que\ calcula\ la\ distancia\ existente\ entre\ el\ \r\n\ punto\ objeto\ due\u00F1o\ y\ otro\ punto\ que\ se\ transmite\ \r\n\ como\ par\u00E1metro\r\n\r\n\ @param\ p\ punto\ hasta\ el\ que\ se\ calcula\ la\ distancia\r\n\ @return\ valor\ real\ que\ indica\ dicha\ distancia\r\n
comment13.params=
comment13.target=int\ cuadrante()
comment13.text=\r\n\ m\u00E9todo\ que\ comprueba\ en\ cu\u00E1l\ de\ los\ cuatro\ cuadrantes\r\n\ se\ encuentra\ el\ punto\ objeto\ due\u00F1o\ teniendo\ en\ cuenta\r\n\ que\ se\ numeran\ del\ 1\ al\ 4\ y\ si\ el\ punto\ se\ encuentra\r\n\ en\ los\ ejes\ se\ considerar\u00E1\ el\ valor\ 0\ (cero)\ para\r\n\ representar\ dicha\ situaci\u00F3n\r\n\r\n\ @return\ un\ valor\ entero\ que\ indica\ el\ n\u00FAmero\ de\ \r\n\ cuadrante\ \u00F3\ 0\ (cero)\ si\ el\ punto\ est\u00E1\ en\ los\ ejes\r\n
comment14.params=
comment14.target=int\ cuadranteBis()
comment14.text=\r\n\ m\u00E9todo\ que\ comprueba\ en\ cu\u00E1l\ de\ los\ cuatro\ cuadrantes\r\n\ se\ encuentra\ el\ punto\ objeto\ due\u00F1o\ teniendo\ en\ cuenta\r\n\ que\ se\ numeran\ del\ 1\ al\ 4\ y\ si\ el\ punto\ se\ encuentra\r\n\ en\ los\ ejes\ se\ considerar\u00E1\ el\ valor\ 0\ (cero)\ para\r\n\ representar\ dicha\ situaci\u00F3n\r\n\r\n\ @return\ un\ valor\ entero\ que\ indica\ el\ n\u00FAmero\ de\ \r\n\ cuadrante\ \u00F3\ 0\ (cero)\ si\ el\ punto\ est\u00E1\ en\ los\ ejes\r\n
comment15.params=incX\ incY
comment15.target=void\ desplazamientoRelativo(double,\ double)
comment15.text=\r\n\ m\u00E9todo\ que\ mueve\ un\ punto\ desplazandolo\ unas\ \r\n\ cantidades\ fijas\ tanto\ en\ el\ eje\ X\ como\ el\ eje\ Y\r\n\r\n\ @param\ incX\ incremento\ en\ el\ eje\ X\r\n\ @param\ incY\ incremento\ en\ el\ eje\ Y\r\n
comment16.params=p1\ p2
comment16.target=boolean\ mismosPuntos(Punto2D,\ Punto2D)
comment16.text=\r\n\ m\u00E9todo\ que\ calcula\ la\ distancia\ entre\ dos\ puntos\r\n\ del\ plano\ que\ son\ transmitidos\ como\ par\u00E1metros\r\n\r\n\ @param\ p1\ primer\ punto\r\n\ @param\ p2\ segundo\ punto\r\n\ @return\ distancia\ entre\ ambos\ puntos\r\n
comment17.params=p1\ p2
comment17.target=boolean\ muyProximos(Punto2D,\ Punto2D)
comment17.text=\r\n\ m\u00E9todo\ que\ comprueba\ si\ dos\ puntos\ que\ se\ transmiten\r\n\ como\ par\u00E1metros\ est\u00E1n\ tremendamente\ pr\u00F3ximos\r\n\r\n\ @param\ p1\ primer\ punto\r\n\ @param\ p2\ segundo\ punto\r\n\ @return\ valor\ cierto\ o\ falso\ resultante\ de\ la\ \r\n\ comprobaci\u00F3n\r\n
comment18.params=p1\ p2
comment18.target=double\ distanciaEntre(Punto2D,\ Punto2D)
comment18.text=\r\n\ m\u00E9todo\ que\ calcula\ la\ distancia\ entre\ dos\ puntos\ que\r\n\ se\ transmiten\ como\ par\u00E1metros\r\n\r\n\ @param\ p1\ primer\ punto\r\n\ @param\ p2\ segundo\ punto\r\n\ @return\ distancia\ entre\ los\ dos\ puntos\ \r\n
comment19.params=
comment19.target=Punto2D\ leerPunto2D()
comment19.text=\r\n\ Method\ leerPunto2D.\ Este\ m\u00E9todo\ permite\ solicitar\ al\r\n\ usuario\ los\ valores\ de\ las\ coordenadas\ de\ un\ punto\ y,\ \r\n\ con\ ellas,\ construye\ un\ objeto\ Punto2D\ y\ lo\ devuelve\r\n\r\n\ @return\ objeto\ de\ clase\ Punto2D\ leido\ del\ teclado\r\n
comment2.params=x\ y
comment2.target=Punto2D(double,\ double)
comment2.text=\r\n\ genera\ un\ nuevo\ punto\ que\ tiene\ como\ coordenadas\r\n\ dos\ valores\ reales\ concretos\ que\ se\ transfieren\ \r\n\ como\ par\u00E1metros\r\n
comment3.params=p
comment3.target=Punto2D(Punto2D)
comment3.text=\r\n\ genera\ un\ nuevo\ punto\ clonando\ los\ valores\ de\ \r\n\ otro\ concreto\ que\ se\ transfiere\ como\ par\u00E1metro\r\n
comment4.params=
comment4.target=double\ getX()
comment4.text=\r\n\ m\u00E9todo\ observador\ del\ campo\ x\r\n\r\n\ @return\ valor\ del\ campo\ x\r\n
comment5.params=
comment5.target=double\ getY()
comment5.text=\r\n\ m\u00E9todo\ observador\ del\ campo\ y\r\n\r\n\ @return\ valor\ del\ campo\ y\r\n
comment6.params=x
comment6.target=void\ setX(double)
comment6.text=\r\n\ m\u00E9todo\ modificador\ del\ campo\ x\r\n\r\n\ @param\ x\ nuevo\ valor\ para\ el\ campo\ x\r\n
comment7.params=y
comment7.target=void\ setY(double)
comment7.text=\r\n\ m\u00E9todo\ modificador\ del\ campo\ y\r\n\r\n\ @param\ y\ nuevo\ valor\ para\ el\ campo\ y\r\n
comment8.params=
comment8.target=java.lang.String\ toString()
comment8.text=\r\n\ m\u00E9todo\ para\ obtener\ una\ representaci\u00F3n\ textual\ del\r\n\ valor\ del\ punto;\ redefinimos\ el\ m\u00E9todo\ toString\ que\r\n\ se\ hereda\ de\ la\ superclase\ Object\r\n\r\n\ @return\ cadena\ de\ caracteres\ que\ contiene\ dicha\ \r\n\ representaci\u00F3n\r\n
comment9.params=mensaje
comment9.target=void\ escribePunto(java.lang.String)
comment9.text=\r\n\ m\u00E9todo\ que\ muestra\ por\ pantalla\ las\ coordenadas\r\n\ del\ punto\ precedido\ de\ un\ mensaje\ que\ se\ transmite\r\n\ como\ par\u00E1metro\r\n\r\n\ @param\ mensaje\ cadena\ de\ caracteres\ que\ se\ escribir\u00E1\r\n\ por\ pantalla\ antes\ del\ valor\ del\ punto\r\n
numComments=20
